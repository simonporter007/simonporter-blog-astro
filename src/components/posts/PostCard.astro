---
import formatDate from '@/utils/formatDate';

type Props = {
  title: string;
  publishedAt: Date;
  description: string;
  slug: string;
  tags?: string[];
};

const { title, publishedAt, description, slug, tags } = Astro.props;
---

<button
  role='link'
  data-slug={slug}
  class='group grid cursor-pointer gap-4 border border-foreground p-4 transition-all duration-300 hover:-translate-y-2 hover:border-ring'
>
  <div
    class='flex w-full flex-col justify-between gap-2 md:flex-row md:items-center'
  >
    <h1 class='text-accent-foreground text-lg font-bold'>{title}</h1>
    <div class='flex flex-row justify-center items-center gap-4'>
      <h2 class='text-muted-foreground'>{formatDate(publishedAt)}</h2>

      <svg
        width='18'
        height='18'
        viewBox='0 0 18 18'
        fill='none'
        class='transition-all duration-300 group-hover:translate-x-1'
      >
        <path
          d='M5.25 12.75L12.75 5.25'
          stroke='#999999'
          stroke-linecap='round'
          stroke-linejoin='round'></path>
        <path
          d='M5.25 5.25H12.75V12.75'
          stroke='#999999'
          stroke-linecap='round'
          stroke-linejoin='round'></path>
      </svg>
    </div>
  </div>

  <p class='justify-self-start'>
    {description}
  </p>
  {
    tags?.length ? (
      <div class='flex flex-row gap-2 text-muted-foreground flex-wrap'>
        {tags?.map((tag, idx) => {
          return (
            <>
              <p>
                <a class='hover:text-ring' href={`/tags/${tag}`}>
                  {tag}
                </a>
              </p>
              {idx < tags?.length - 1 ? <span>{'â€¢'}</span> : ''}
            </>
          );
        })}
      </div>
    ) : null
  }
</button>
<script>
  import { navigate } from 'astro:transitions/client';
  import { prefetch } from 'astro:prefetch';

  function handleButtonEvents() {
    const buttons = document.querySelectorAll('button');
    const tags = document.querySelectorAll('button a');

    buttons.forEach((button) => {
      button.addEventListener('click', (ev) => {
        const slug = (ev.currentTarget as HTMLButtonElement)?.dataset?.slug;
        slug && navigate(`/posts/${slug}`);
      });
      button.addEventListener('hover', (ev) => {
        const slug = (ev.currentTarget as HTMLButtonElement)?.dataset?.slug;
        slug && prefetch(`/posts/${slug}`);
      });
    });

    tags.forEach((tag) => {
      tag.addEventListener('click', (ev) => {
        ev.stopPropagation();
      });
    });
  }

  document.addEventListener('astro:after-swap', () => {
    handleButtonEvents();
  });
  handleButtonEvents();
</script>
